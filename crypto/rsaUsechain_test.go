// Copyright 2018 The go-usechain Authors
// This file is part of the go-usechain library.
//
// The go-usechain library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-usechain library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-usechain library. If not, see <http://www.gnu.org/licenses/>.
package crypto

import (
	"testing"
	"fmt"
	"github.com/usechain/go-usechain/common"
	"github.com/usechain/go-usechain/common/hexutil"
)

func TestRSAKeypair(t *testing.T)  {
	GenerateRSAKeypair()
}

func TestRSA_Sign(t *testing.T){
	message:="0x21a7325a75492db1ee86c1d2d22984b83f6082e5"
	sig,_ := RSA_Sign(message)
	fmt.Println(sig)

	res:=RSA_Verify(message,sig)
	fmt.Println(res)
}

func TestReadUserCert(t *testing.T) {
	userCertString:=ReadUserCert()
	fmt.Println(userCertString)

	res:=CheckUserCert(userCertString)
	fmt.Println(res)
}


func TestUserCert(t *testing.T) {

	cert:="2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d49494457444343416b436741774942416749514f5346533550635342756544776c4c546f657a646644414e42676b71686b69473977304241517346414441670a4d517377435159445651514745774a44546a45524d4138474131554543684d4956584e6c51326868615734774868634e4d5467774e7a45774d5441774d7a51300a5768634e4d6a67774e7a45774d5441774d7a5130576a41674d517377435159445651514745774a44546a45524d4138474131554543684d4956584e6c513268680a61573477676745694d4130474353714753496233445145424151554141344942447741776767454b416f4942415144426865306754664a4c6b646639637479790a4b716f635476304e6f664973526d713067796e355a616c6832734470306d38465073356243663067357063485168373250436e65794a714c3875364f736b7a750a4d5548433374724458652b425130534d77553576313772416d745a5a396c545747635652386661584c5a744762305137434634626b4f4a58703465547475394f0a4461457948386b71664556576155776e5a754b4738395a6b4933766761346135784a78724c5a5644764e705069547a69316c653370496a7552426f506b2b4f590a625a72627441463838754d6c47635978594344686e7070384c6c546c315568496b346364716a586e744c694b5342304f75756872445373664e715a32304467530a36424e4171586e42667431744a4b56434e473645766d30633077766d316a64456530444143645245482b4f326f765a4a412b704c797a2b464a6a6a506e5876690a44576d5641674d424141476a6759307767596f7744675944565230504151482f4241514441674b6b4d423047413155644a5151574d42514743437347415155460a42774d42426767724267454642516344416a415042674e5648524d4241663845425441444151482f4d45674741315564455152424d442b4343577876593246730a6147397a644945794d4867794d5745334d7a4931515463314e446b79524749785a5755344e6b4d785a444a454d6a49354f4452694f444e6d4e6a41344d6d55310a514445324d79356a623230774451594a4b6f5a496876634e4151454c42514144676745424141385067544a2f62397556333046756b78544250594d3466314b500a787335746d362b4754654c2f414b302b664e66555a314938546e3754724650726f597934524662337a325437466f58414e33597943656257307452344f354e790a424d7531544b386f4d484152654852636e4e4764425353614b2b6749324d594779336a79426975385a47696d2f78662b776441696d2b5466474e59736c7476720a4b77434b5441514c7051542b78723270662f5a384d616e584474764e414e483632474557784835464f673665466e43513469357169704770396c576e4d4262770a44694f79494c36314e654a655852326443694c496d474f6c534d76415a6a492b5035456854633347312b4452532f7343777a656d733974486d4a4c59356c4c390a3776424e3864734c42776b77783461456538613854693646387779487142665076646b6261454f636d65595734676f5a7a5237694f6f455a594a593d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	sig:="604bc7a3471d09e129a69e03a8e32a4db9f1c5d1cf80a510cb97f00aaee459e85b89229960c30e2ee695c81baa48c63155c2b3460b14f90c5a832ccc62c3d756535515d537055b0532d581aaf4b3823e1b986d386b5e806fb2b67a9dddf2b7ba62d6b07b8a6b8b6fca419ebb920c2c89e16d550e8aefffa427f0982b575f63eb38abe611e0a478d851736ea90fac475c1866f70cfc5803886071ac7e62098cd0394c824d403fe54e78b129be7613c98cfdbff4aa17ed4a9707cc71fb899319a8c8fa56a557a4b153e1d200c502f2044e66de0c7bedcc85667f83ce47715c3a3621800f91e3d4f6d06bbeef7104dbc88d7f7ed26b60c5ab19544603570bbbe758"
	addr:="0x2377eD6deE87FAD998d37b95c12a08A8d514D871"

	var ContractAddr common.Address
	ContractAddr2,_:=hexutil.Decode(addr)
	copy(ContractAddr[:],ContractAddr2)

	err :=CheckUserCertStandard(cert, ContractAddr, []byte(sig))
	fmt.Println(err)
}

func TestRSA_V(t *testing.T){
	message:="21a7325a75492db1ee86c1d2d22984b83f6082e5"
	sig:="393ec9e9e2d48daa5ff3b14b7441e2c95009d5a913420bb0b7c8a059100295674a461394f174e1366d5bd604ff123bde4e05cedea033ac5c1f28b070f1f2abc45b7463364f8a4aacee7c9caa8661ee28fac4065902b833af35bfcd0dfce3c7695658ba28a89bfad51bfe30a620a3cd9112aa982d9d62c7f9c82287fb357d9fb8127c063511e25108ff50022c59efcb92243f864f4d24ab58d9e15a7da5e0d26dc85230489c5c31753d343bd268e1a45e41798e760bedf8fa513a6545d7da01488e23418c206555a70f3fa56b3d0f9f01c2a0d73acb2a513ece2f1dff85d9d5bf508e679f194546c613487aa284b6e311abb22f3e9267caf7dce84eb5c71a20fb"
	res:=RSA_Verify(message,sig)
	fmt.Println(res)
}


//sig:
//cca7819a08fc23890b0614aa961807dacd88b3d3269cf1a1d545b620e0af0bfc819a4ec5ea19e7ef5fc5e68acd40e443b5093ea9e2668daa319f385d4172a3297f7e4db04e6b8a26e98e8d1435407cb018ca4792d875e5ee2edc54633910de0e1adbc06078854c0c39a5983d37b0a3c1ae67195f2902daf5c17baa136d8c1edf27233a761a36e214f306bf11eee173f7e317a9b3429e1484f62672c767dc2bd9ce2ef516830890faa49f9d778f76b1903c948cba0c879efc144a807e6c8dcf3389680b12970ca9e1f2c353e6557c24a73ce15860a8c151c91d065dbaed3c6322aa772c151bc68bcafc8ed0680ab4a6afe9963a181fe8540e16ee8df11b97b3f0
//512

//cert:
//2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949444a4443434167796741774942416749514a664a53577166784650744230366e46456f544d4444414e42676b71686b69473977304241517346414441670a4d517377435159445651514745774a44546a45524d4138474131554543684d4956584e6c51326868615734774868634e4d5467774e7a41324d444d7a4e6a4d780a5768634e4d6a67774e7a41324d444d7a4e6a4d78576a41674d517377435159445651514745774a44546a45524d4138474131554543684d4956584e6c513268680a61573477676745694d4130474353714753496233445145424151554141344942447741776767454b416f49424151445a4a67386e48456c6f6a674131454f6a770a2f694854692b6d31453036445633326942655973326f34384a2f3032557a52495252355968316955366777617261704a38546f573371797751754a6c684246660a4757444972427a776d6e5131664f6b65685754674f395258556170416b725559514c3977517333494630515a6e6e7148466e72666168304d4637365169506a350a79645150514a78652f39544d626f6a322b526a6f4e642f776e7a4968746133625a692f67475242365332466a2b4e585535744e6b70353974674e7277783673770a50594176737676505037446576355a494c3057354539736765366456566b57566a5463796e312f4c3668455a486a335477674354794a46514f477739726944300a746f6d6253314141756e322b4351476472594150565272743063627531417962746436683570483533444164662f6c39703645395a6c6e374b4346486c53484b0a414d774641674d424141476a576a42594d41344741315564447745422f775145417749437044416442674e5648535545466a41554267677242674546425163440a415159494b775942425155484177497744775944565230544151482f42415577417745422f7a415742674e5648524545447a414e67676c7362324e68624768760a633353424144414e42676b71686b6947397730424151734641414f43415145414e53793530514d696355697064483767413544787a636a4c5036534e6e6c77340a4d427730647851327054437a6e7439413770447142535745764d50535942586e6c5851314f454630784532506f46726a52744c526e4f6e4f78415651323858640a6b2f3162725a486b304b314f4f7a71774f69533974796267336d32734d7347715132364f6a334d5934367346474b647664436f336f4d654b454c764b655330720a78634653337651646d57356647636d6155364e435863365849422b3342484b3478544143444f683932697658794e35565756642b51463358427943487068374f0a6d437a3972694b335a516b7930622b3439443248416f4f744e59544d5a71796a6f635777723546473546717134544a6f6868315134716b73435045766b4863740a46346632787267772f517338656e44683969542f3955735365706b576e4b394379653754566c7972453376793051544a344a516e57673d3d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a
//2302

//pub:
//0x049a0b2c928af39a0dd635702e920864d16ec9846d1517a5e181792d4b84943688746359d46c49045d42b550a27f464919c1838f93d478750deeec48a8a9db12a6
//132